name: Django CI

on:
  push:
    branches: [ "develop" ]
  pull_request:
    branches: [ "develop" ]

jobs:
  build:
    runs-on: ubuntu-latest
    strategy:
      max-parallel: 4
      matrix:
        python-version: [3.11, 3.12, 3.13]

    steps:
    - uses: actions/checkout@v4

    - name: Set up Python ${{ matrix.python-version }}
      uses: actions/setup-python@v3
      with:
        python-version: ${{ matrix.python-version }}

    - name: Cache pip packages
      uses: actions/cache@v3
      with:
        path: ~/.cache/pip
        key: ${{ runner.os }}-pip-${{ hashFiles('requirements.txt') }}
        restore-keys: |
          ${{ runner.os }}-pip-

    - name: Install Dependencies
      run: |
        python -m pip install --upgrade pip
        pip install setuptools==67.8.0
        pip install -r requirements.txt

    - name: Create .env file
      run: |
        echo "DJANGO_SECRET_KEY=test-secret-key" > .env
        echo "DEBUG=1" >> .env
        echo "DJANGO_LOGLEVEL=INFO" >> .env
        echo "DJANGO_ALLOWED_HOSTS=127.0.0.1,localhost" >> .env
        echo "DATABASE_ENGINE=django.db.backends.sqlite3" >> .env
        echo "DATABASE_NAME=db.sqlite3" >> .env

    - name: Check for missing migrations
      run: |
        python manage.py makemigrations --check --dry-run

    - name: Run Migrations
      run: |
        python manage.py migrate

    - name: Run Tests
      run: |
        python manage.py test

  e2e-tests:
    runs-on: ubuntu-latest
    needs: build

    steps:
    - uses: actions/checkout@v4

    - name: Install Chrome
      run: |
        sudo apt-get update
        sudo apt-get install -y --no-install-recommends \
          wget \
          gnupg \
          ca-certificates \
          fonts-liberation \
          libasound2 \
          libatk-bridge2.0-0 \
          libatk1.0-0 \
          libatspi2.0-0 \
          libcups2 \
          libdbus-1-3 \
          libdrm2 \
          libgbm1 \
          libgtk-3-0 \
          libnspr4 \
          libnss3 \
          libwayland-client0 \
          libxcomposite1 \
          libxdamage1 \
          libxfixes3 \
          libxkbcommon0 \
          libxrandr2 \
          xdg-utils \
          google-chrome-stable \
          xvfb

    - name: Set up Python
      uses: actions/setup-python@v3
      with:
        python-version: '3.13'

    - name: Cache pip packages
      uses: actions/cache@v3
      with:
        path: ~/.cache/pip
        key: ${{ runner.os }}-pip-${{ hashFiles('requirements.txt') }}
        restore-keys: |
          ${{ runner.os }}-pip-

    - name: Install Dependencies
      run: |
        python -m pip install --upgrade pip
        pip install -r requirements.txt
        pip install pytest pytest-django selenium requests

    - name: Create .env file
      run: |
        echo "DJANGO_SECRET_KEY=test-secret-key" > .env
        echo "DEBUG=1" >> .env
        echo "DJANGO_LOGLEVEL=INFO" >> .env
        echo "DJANGO_ALLOWED_HOSTS=127.0.0.1,localhost" >> .env
        echo "DATABASE_ENGINE=django.db.backends.sqlite3" >> .env
        echo "DATABASE_NAME=db.sqlite3" >> .env
        echo "CHROME_BIN=/usr/bin/google-chrome" >> .env
        echo "CHROME_PATH=/usr/lib/chromium/" >> .env

    - name: Run Migrations
      run: |
        python manage.py migrate

    - name: Run E2E Tests
      run: |
        # Start Django server in background
        python manage.py runserver 0.0.0.0:8000 &
        SERVER_PID=$!

        # Wait for server to start
        sleep 5

        # Run pytest with e2e tests
        xvfb-run --server-args="-screen 0 1920x1080x24" python -m pytest e2e_tests/ -v --disable-warnings

        # Stop the server
        kill $SERVER_PID || true