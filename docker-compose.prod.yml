services:
  redis:
    image: "redis:alpine"
    ports:
      - "6379:6379"

  db:
    build: # Usa el Dockerfile.db para construir la imagen de la BD
      context: .
      dockerfile: Dockerfile.db
    environment:
      POSTGRES_DB: ${DATABASE_NAME}
      POSTGRES_USER: ${DATABASE_USERNAME}
      POSTGRES_PASSWORD: ${DATABASE_PASSWORD}
    ports:
      - "5432:5432"
    volumes:
      - postgres_data:/var/lib/postgresql/data
    env_file:
      - .env

    command:
      - postgres
      - -c
      - listen_addresses=*
      - -c
      - shared_preload_libraries=pglogical
      - -c
      - wal_level=logical
      - -c
      - wal_sender_timeout=0
      - -c
      - max_wal_senders=10
      - -c
      - max_replication_slots=10

    restart: unless-stopped

  django-web:
    build: .
    container_name: django-docker
    ports:
      - "8080:8080"
    depends_on:
      - db
      - redis
    environment:
      DJANGO_SECRET_KEY: ${DJANGO_SECRET_KEY}
      DEBUG: ${DEBUG}
      DJANGO_LOGLEVEL: ${DJANGO_LOGLEVEL}
      DJANGO_ALLOWED_HOSTS: ${DJANGO_ALLOWED_HOSTS}
      DATABASE_ENGINE: ${DATABASE_ENGINE}
      DATABASE_NAME: ${DATABASE_NAME}
      DATABASE_USERNAME: ${DATABASE_USERNAME}
      DATABASE_PASSWORD: ${DATABASE_PASSWORD}
      DATABASE_HOST: ${DATABASE_HOST}
      DATABASE_PORT: ${DATABASE_PORT}
      DJANGO_SETTINGS_MODULE: agendadosDjango.settings  # Add this line
    volumes:
      - .:/app
    env_file:
      - .env

volumes:
   postgres_data: